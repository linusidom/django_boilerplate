def settings_project(app_name, dst, secret_key, project_name):

    content = "\
\"\"\"\n\
Django settings for portfolio project.\n\
\n\
Generated by 'django-admin startproject' using Django 2.1.\n\
\n\
For more information on this file, see\n\
https://docs.djangoproject.com/en/2.1/topics/settings/\n\
\n\
For the full list of settings and their values, see\n\
https://docs.djangoproject.com/en/2.1/ref/settings/\n\
\"\"\"\n\
\n\
import os\n\
\n\
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\n\
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')\n\
STATIC_DIR = os.path.join(BASE_DIR, 'static')\n\
\n\
# Quick-start development settings - unsuitable for production\n\
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/\n"
    
    content += "\n\
"+secret_key+"\n\
\n\
# SECURITY WARNING: don't run with debug turned on in production!\n\
DEBUG = True\n\
\n\
ALLOWED_HOSTS = []\n\
\n\
\n\
# Application definition\n\
\n\
INSTALLED_APPS = [\n\
    'django.contrib.admin',\n\
    'django.contrib.auth',\n\
    'django.contrib.contenttypes',\n\
    'django.contrib.sessions',\n\
    'django.contrib.messages',\n\
    'django.contrib.staticfiles',\n\
    'rest_framework',\n\
    'livereload',\n"

    for app in app_name:
        if app == 'accounts':
            AUTH_USER_MODEL = app
        content += "    '"+app+"',\n"
    
    content += "\
]\n"
    try:
        if AUTH_USER_MODEL:
            content += "\nAUTH_USER_MODEL = '"+AUTH_USER_MODEL+"."+AUTH_USER_MODEL[0:-1].title()+"'\n"
    except:
        pass
    
    content += "\n\
MIDDLEWARE = [\n\
    'django.middleware.security.SecurityMiddleware',\n\
    'django.contrib.sessions.middleware.SessionMiddleware',\n\
    'django.middleware.common.CommonMiddleware',\n\
    'django.middleware.csrf.CsrfViewMiddleware',\n\
    'django.contrib.auth.middleware.AuthenticationMiddleware',\n\
    'django.contrib.messages.middleware.MessageMiddleware',\n\
    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\
    'livereload.middleware.LiveReloadScript',\n\
]\n\
\n\
ROOT_URLCONF = '"+project_name+".urls'\n\
\n\
TEMPLATES = [\n\
    {\n\
        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n\
        'DIRS': [TEMPLATE_DIR,],\n\
        'APP_DIRS': True,\n\
        'OPTIONS': {\n\
            'context_processors': [\n\
                'django.template.context_processors.debug',\n\
                'django.template.context_processors.request',\n\
                'django.contrib.auth.context_processors.auth',\n\
                'django.contrib.messages.context_processors.messages',\n\
            ],\n\
        },\n\
    },\n\
]\n\
\n\
WSGI_APPLICATION = '"+project_name+".wsgi.application'\n\
\n\
\n\
# Database\n\
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases\n\
\n\
DATABASES = {\n\
    'default': {\n\
        'ENGINE': 'django.db.backends.sqlite3',\n\
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n\
    }\n\
}\n\
\n\
\n\
# Password validation\n\
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators\n\
\n\
AUTH_PASSWORD_VALIDATORS = [\n\
    {\n\
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n\
    },\n\
    {\n\
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n\
    },\n\
    {\n\
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n\
    },\n\
    {\n\
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n\
    },\n\
]\n\
\n\
\n\
# Internationalization\n\
# https://docs.djangoproject.com/en/2.1/topics/i18n/\n\
\n\
LANGUAGE_CODE = 'en-us'\n\
\n\
TIME_ZONE = 'UTC'\n\
\n\
USE_I18N = True\n\
\n\
USE_L10N = True\n\
\n\
USE_TZ = True\n\
\n\
\n\
# Static files (CSS, JavaScript, Images)\n\
# https://docs.djangoproject.com/en/2.1/howto/static-files/\n\
\n\
STATICFILES_DIRS = [STATIC_DIR,]\n\
STATIC_URL = '/static/'\n\
\n\
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\n\
MEDIA_URL = '/media/'\n\
MEDIA_ROOT = os.path.join(BASE_DIR, 'media_root')\n\
\n\
LOGIN_REDIRECT_URL = 'index'\n\
LOGOUT_REDIRECT_URL = 'index'\n\
LOGIN_URL = 'user_login'\n\
"

    f = open(dst, 'w')
    f.write(content)
    f.close()